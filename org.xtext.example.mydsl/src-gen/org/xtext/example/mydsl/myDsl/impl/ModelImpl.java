/**
 * generated by Xtext 2.17.1
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Model;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.MyObject;
import org.xtext.example.mydsl.myDsl.MyPort;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ModelImpl#getMyObject <em>My Object</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ModelImpl#getMyPort <em>My Port</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getMyObject() <em>My Object</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMyObject()
   * @generated
   * @ordered
   */
  protected EList<MyObject> myObject;

  /**
   * The cached value of the '{@link #getMyPort() <em>My Port</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMyPort()
   * @generated
   * @ordered
   */
  protected EList<MyPort> myPort;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MyObject> getMyObject()
  {
    if (myObject == null)
    {
      myObject = new EObjectContainmentEList<MyObject>(MyObject.class, this, MyDslPackage.MODEL__MY_OBJECT);
    }
    return myObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MyPort> getMyPort()
  {
    if (myPort == null)
    {
      myPort = new EObjectContainmentEList<MyPort>(MyPort.class, this, MyDslPackage.MODEL__MY_PORT);
    }
    return myPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__MY_OBJECT:
        return ((InternalEList<?>)getMyObject()).basicRemove(otherEnd, msgs);
      case MyDslPackage.MODEL__MY_PORT:
        return ((InternalEList<?>)getMyPort()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__MY_OBJECT:
        return getMyObject();
      case MyDslPackage.MODEL__MY_PORT:
        return getMyPort();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__MY_OBJECT:
        getMyObject().clear();
        getMyObject().addAll((Collection<? extends MyObject>)newValue);
        return;
      case MyDslPackage.MODEL__MY_PORT:
        getMyPort().clear();
        getMyPort().addAll((Collection<? extends MyPort>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__MY_OBJECT:
        getMyObject().clear();
        return;
      case MyDslPackage.MODEL__MY_PORT:
        getMyPort().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MODEL__MY_OBJECT:
        return myObject != null && !myObject.isEmpty();
      case MyDslPackage.MODEL__MY_PORT:
        return myPort != null && !myPort.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
